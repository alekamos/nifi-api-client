/*
 * NiFi Rest Api
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * OpenAPI spec version: 1.13.0
 * Contact: dev@nifi.apache.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.JaxbLink;
import io.swagger.client.model.Permissions;
import io.swagger.client.model.RevisionInfo;
import java.io.IOException;

/**
 * VersionedFlow
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-03-11T15:06:11.268+01:00")
public class VersionedFlow {
  @SerializedName("link")
  private JaxbLink link = null;

  @SerializedName("identifier")
  private String identifier = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("bucketIdentifier")
  private String bucketIdentifier = null;

  @SerializedName("bucketName")
  private String bucketName = null;

  @SerializedName("createdTimestamp")
  private Long createdTimestamp = null;

  @SerializedName("modifiedTimestamp")
  private Long modifiedTimestamp = null;

  /**
   * The type of item.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    FLOW("Flow"),
    
    BUNDLE("Bundle");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("permissions")
  private Permissions permissions = null;

  @SerializedName("versionCount")
  private Long versionCount = null;

  @SerializedName("revision")
  private RevisionInfo revision = null;

   /**
   * An WebLink to this entity.
   * @return link
  **/
  @ApiModelProperty(value = "An WebLink to this entity.")
  public JaxbLink getLink() {
    return link;
  }

   /**
   * An ID to uniquely identify this object.
   * @return identifier
  **/
  @ApiModelProperty(value = "An ID to uniquely identify this object.")
  public String getIdentifier() {
    return identifier;
  }

  public VersionedFlow name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the item.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "The name of the item.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public VersionedFlow description(String description) {
    this.description = description;
    return this;
  }

   /**
   * A description of the item.
   * @return description
  **/
  @ApiModelProperty(value = "A description of the item.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public VersionedFlow bucketIdentifier(String bucketIdentifier) {
    this.bucketIdentifier = bucketIdentifier;
    return this;
  }

   /**
   * The identifier of the bucket this items belongs to. This cannot be changed after the item is created.
   * @return bucketIdentifier
  **/
  @ApiModelProperty(required = true, value = "The identifier of the bucket this items belongs to. This cannot be changed after the item is created.")
  public String getBucketIdentifier() {
    return bucketIdentifier;
  }

  public void setBucketIdentifier(String bucketIdentifier) {
    this.bucketIdentifier = bucketIdentifier;
  }

   /**
   * The name of the bucket this items belongs to.
   * @return bucketName
  **/
  @ApiModelProperty(value = "The name of the bucket this items belongs to.")
  public String getBucketName() {
    return bucketName;
  }

   /**
   * The timestamp of when the item was created, as milliseconds since epoch.
   * minimum: 1
   * @return createdTimestamp
  **/
  @ApiModelProperty(value = "The timestamp of when the item was created, as milliseconds since epoch.")
  public Long getCreatedTimestamp() {
    return createdTimestamp;
  }

   /**
   * The timestamp of when the item was last modified, as milliseconds since epoch.
   * minimum: 1
   * @return modifiedTimestamp
  **/
  @ApiModelProperty(value = "The timestamp of when the item was last modified, as milliseconds since epoch.")
  public Long getModifiedTimestamp() {
    return modifiedTimestamp;
  }

  public VersionedFlow type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The type of item.
   * @return type
  **/
  @ApiModelProperty(required = true, value = "The type of item.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

   /**
   * The access that the current user has to the bucket containing this item.
   * @return permissions
  **/
  @ApiModelProperty(value = "The access that the current user has to the bucket containing this item.")
  public Permissions getPermissions() {
    return permissions;
  }

   /**
   * The number of versions of this flow.
   * minimum: 0
   * @return versionCount
  **/
  @ApiModelProperty(value = "The number of versions of this flow.")
  public Long getVersionCount() {
    return versionCount;
  }

   /**
   * The revision of this entity used for optimistic-locking during updates.
   * @return revision
  **/
  @ApiModelProperty(value = "The revision of this entity used for optimistic-locking during updates.")
  public RevisionInfo getRevision() {
    return revision;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VersionedFlow versionedFlow = (VersionedFlow) o;
    return Objects.equals(this.link, versionedFlow.link) &&
        Objects.equals(this.identifier, versionedFlow.identifier) &&
        Objects.equals(this.name, versionedFlow.name) &&
        Objects.equals(this.description, versionedFlow.description) &&
        Objects.equals(this.bucketIdentifier, versionedFlow.bucketIdentifier) &&
        Objects.equals(this.bucketName, versionedFlow.bucketName) &&
        Objects.equals(this.createdTimestamp, versionedFlow.createdTimestamp) &&
        Objects.equals(this.modifiedTimestamp, versionedFlow.modifiedTimestamp) &&
        Objects.equals(this.type, versionedFlow.type) &&
        Objects.equals(this.permissions, versionedFlow.permissions) &&
        Objects.equals(this.versionCount, versionedFlow.versionCount) &&
        Objects.equals(this.revision, versionedFlow.revision);
  }

  @Override
  public int hashCode() {
    return Objects.hash(link, identifier, name, description, bucketIdentifier, bucketName, createdTimestamp, modifiedTimestamp, type, permissions, versionCount, revision);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VersionedFlow {\n");
    
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    bucketIdentifier: ").append(toIndentedString(bucketIdentifier)).append("\n");
    sb.append("    bucketName: ").append(toIndentedString(bucketName)).append("\n");
    sb.append("    createdTimestamp: ").append(toIndentedString(createdTimestamp)).append("\n");
    sb.append("    modifiedTimestamp: ").append(toIndentedString(modifiedTimestamp)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    versionCount: ").append(toIndentedString(versionCount)).append("\n");
    sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

